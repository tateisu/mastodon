version: '3'
services:



  db_backend:
    restart: always
    image: postgres:11.10-alpine
    shm_size: 256mb
    networks:
      - internal_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
    volumes:
      - ../postgres:/var/lib/postgresql/data

  db:
    restart: always
    image: gavinmroy/alpine-pgbouncer:1.7.2
    networks:
      - internal_network
    volumes:
      - ../pgbouncer:/etc/pgbouncer
    depends_on:
      - db_backend
## expose port for munin
    ports:
      - "172.17.0.1:5432:5432"


  redis:
    restart: always
    image: redis:6.0-alpine
    networks:
      - internal_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - ../redis:/data

#  es:
#    restart: always
#    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.10
#    environment:
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#      - "cluster.name=es-mastodon"
#      - "discovery.type=single-node"
#      - "bootstrap.memory_lock=true"
#    networks:
#      - internal_network
#    healthcheck:
#      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
#    volumes:
#      - ./elasticsearch:/usr/share/elasticsearch/data
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1

  web:
    build: .
    image: tootsuite/mastodon
    restart: always
    env_file: .env.production
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    networks:
      - external_network
      - internal_network
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:3000/health || exit 1"]
    ports:
      - "172.17.0.1:3000:3000"
    depends_on:
      - db
      - redis
#      - es
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ../etc-ImageMagick-7:/etc/ImageMagick-7:ro
      - ../public/assets:/mastodon/public/assets
      - ../public/system:/mastodon/public/system
      - ../public/packs:/mastodon/public/packs

  streaming:
    build: .
    image: tootsuite/mastodon
    restart: always
    env_file: .env.production
    command: node ./streaming
    networks:
      - external_network
      - internal_network
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1"]
    ports:
      - "172.17.0.1:4000:4000"
    depends_on:
      - db
      - redis

  sidekiq_pull:
    build: .
    image: tootsuite/mastodon
    restart: always
    env_file: .env.production
    command: bundle exec sidekiq
    networks:
      - external_network
      - internal_network
    depends_on:
      - db
      - redis
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ../etc-ImageMagick-7:/etc/ImageMagick-7:ro
      - ../public/assets:/mastodon/public/assets
      - ../public/system:/mastodon/public/system
      - ../public/packs:/mastodon/public/packs
      - ./config/sidekiq-pull.yml:/mastodon/config/sidekiq.yml:ro

  sidekiq_push:
    build: .
    image: tootsuite/mastodon
    restart: always
    env_file: .env.production
    command: bundle exec sidekiq
    networks:
      - external_network
      - internal_network
    depends_on:
      - db
      - redis
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ../etc-ImageMagick-7:/etc/ImageMagick-7:ro
      - ../public/assets:/mastodon/public/assets
      - ../public/system:/mastodon/public/system
      - ../public/packs:/mastodon/public/packs
      - ./config/sidekiq-push.yml:/mastodon/config/sidekiq.yml:ro

  sidekiq_default:
    build: .
    image: tootsuite/mastodon
    restart: always
    env_file: .env.production
    command: bundle exec sidekiq
    networks:
      - external_network
      - internal_network
    depends_on:
      - db
      - redis
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ../etc-ImageMagick-7:/etc/ImageMagick-7:ro
      - ../public/assets:/mastodon/public/assets
      - ../public/system:/mastodon/public/system
      - ../public/packs:/mastodon/public/packs
      - ./config/sidekiq-default.yml:/mastodon/config/sidekiq.yml:ro

## Uncomment to enable federation with tor instances along with adding the following ENV variables
## http_proxy=http://privoxy:8118
## ALLOW_ACCESS_TO_HIDDEN_SERVICE=true
#  tor:
#    image: sirboops/tor
#    networks:
#      - external_network
#      - internal_network
#
#  privoxy:
#    image: sirboops/privoxy
#    volumes:
#      - ./priv-config:/opt/config
#    networks:
#      - external_network
#      - internal_network

networks:
  external_network:
  internal_network:
# for access from munin
# internal: true
